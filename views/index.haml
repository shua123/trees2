.row-fluid
  .span4
    %h4
      
    
      
    .well
      %h4
        Address
        <small>(<a id='find_me' href='#'>find me</a>)</small>

      %input#search_address.input-block-level{:placeholder => "Enter an address or an intersection", :type => "text"}
      
      %label
        within
        %select#search_radius.input-small
          %option{:value => "400"} 2 blocks
          %option{:value => "805"} 1/2 mile
          %option{:value => "1610"} 1 mile
          %option{:value => "3220"} 2 miles

      .pull-right
        %button#view_mode.btn.btn-info 
          Show list
      
      %input#search.btn.btn-primary{:type => "button", :value => "Search"}
      %button#reset.btn Reset

    .well
      / Once you decide what filter you want, place the HTML code here. The section in the maps_lib.js is also marked. Once you're done, feel free to delete this explanatory section.
      %label 
        %strong Grades:
        %ul.inputs-list.unstyled
          %li
            %label.checkbox.inline
              %input#cbType1{:type => "checkbox"}/
              Elementary School
          %li
            %label.checkbox.inline
              %input#cbType2{:type => "checkbox"}/
              Middle School
          %li
            %label.checkbox.inline
              %input#cbType3{:type => "checkbox"}/
              High School

      %label 
        %strong Content Type:
        %select#filter_type.input-block-level
          %option{:value => ""} All Content
          %option{:value => "Science"} Science
          %option{:value => "Tech"} Technology
          %option{:value => "Engineering"} Engineering
          %option{:value => "Math"} Math
          %option{:value => "Science/Math"} Science/Math
          %option{:value => "Science/Tech"} Science/Technology



    %p.alert.alert-info.lead#result_count


  .span8
    #listCanvas{:style => "display: none;"}
      #resultsList

    #map_canvas

    %span.pull-right
      Map by
      = succeed "." do
        %a{:href => "https://twitter.com/shua123"} Josh Kalov
      %a{:href => "http://derekeder.com/searchable_map_template/"} Searchable Map Template
      by
      = succeed "." do
        %a{:href => "http://derekeder.com"} Derek Eder

- content_for :javascripts do
  = include_javascript :"jquery.address.min"
  = include_javascript :"http://maps.google.com/maps/api/js?sensor=false&amp;libraries=places"
  = include_javascript "jquery.geocomplete.min"
  %script{:src => "/javascripts/maps_lib.js?1", :type => "text/javascript"}

  :javascript
    $(window).resize(function () {
      var h = $(window).height(),
        offsetTop = 90; // Calculate the top offset
    
      $('#map_canvas').css('height', (h - offsetTop));
    }).resize();
    
    $(function() {
      MapsLib.initialize();
      $("#search_address").geocomplete();

      $(':checkbox').click(function(){
        MapsLib.doSearch();
      });

      $('#filter_type').change(function(){
        MapsLib.doSearch();
      });

      $(':radio').click(function(){
        MapsLib.doSearch();
      });
      
      $('#search_radius').change(function(){
        MapsLib.doSearch();
      });
      
      $('#search').click(function(){
        MapsLib.doSearch();
      });
      
      $('#find_me').click(function(){
        MapsLib.findMe(); 
        return false;
      });
      
      $('#reset').click(function(){
        $.address.parameter('address','');
        MapsLib.initialize(); 
        return false;
      });

      $('#view_mode').click(function(){
        var view_mode = $.address.parameter('view_mode');
        if (view_mode == 'list')
          view_mode = 'map';
        else
          view_mode = 'list';

        $.address.parameter('view_mode', view_mode);
        MapsLib.setResultsView(view_mode);
        return false;
      });
      
      $(":text").keydown(function(e){
          var key =  e.keyCode ? e.keyCode : e.which;
          if(key == 13) {
              $('#search').click();
              return false;
          }
      });
    });